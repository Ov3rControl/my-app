{"version":3,"sources":["config/db.js","App.js","serviceWorker.js","components/Edit.js","components/Create.js","components/Show.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onCollectionUpdate","querySnapshot","customers","forEach","doc","_doc$data","data","firstName","lastName","job","push","key","id","setState","ref","firestore","collection","unsubscribe","state","onSnapshot","react_default","a","createElement","class","Link","to","map","customer","className","concat","Component","Boolean","window","location","hostname","match","Edit","onChange","e","target","name","value","onSubmit","preventDefault","_this$state","set","then","docRef","history","params","catch","error","_this2","get","exists","for","type","placeholder","Create","add","console","_this$state2","Show","isLoading","_this3","delete","log","onClick","bind","ReactDOM","render","BrowserRouter","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7bf0e96c.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\nimport firestore from 'firebase/firestore'\r\n\r\nconst settings = {timestampsInSnapshots: true}; //7agat firestore \r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyC4YCQZQjhWSgJyPSlgYMwbizBNPTJUiw0\",\r\n    authDomain: \"customer-38fae.firebaseapp.com\",\r\n    databaseURL: \"https://customer-38fae.firebaseio.com\",\r\n    projectId: \"customer-38fae\",\r\n    storageBucket: \"customer-38fae.appspot.com\",\r\n    messagingSenderId: \"712736876241\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nfirebase.firestore().settings(settings); // \r\n\r\nexport default firebase;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport firebase from './config/db';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = firebase.firestore().collection('customers');\n    this.unsubscribe = null;\n    this.state = {\n      customers: []\n    };\n  }\n\n  onCollectionUpdate = (querySnapshot) => {\n    const customers = [];\n    querySnapshot.forEach((doc) => {\n      const { firstName, lastName, job } = doc.data();\n      customers.push({\n        key: doc.id,\n        doc, \n        firstName,\n        lastName,\n        job,\n      });\n    });\n    this.setState({\n      customers\n   });\n  }\n\n  componentDidMount() {\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-firstName\">\n              CRUD Operations using React JS But This Time i Added Routes\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <h4><Link to=\"/create\">Create Customer</Link></h4>\n            <div class=\"card-body\">\n              <tbody>\n                {this.state.customers.map(customer =>\n                  <tr>\n                    <h6 className=\"card-firstName\"><Link to={`/show/${customer.key}`}>{customer.firstName}</Link></h6>\n                    <h6>{customer.lastName}</h6>\n                    <h6>{customer.job}</h6>\n                  </tr>\n                )}\n              </tbody>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport firebase from '../config/db';\r\n\r\nclass Edit extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      key: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      job: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const ref = firebase.firestore().collection('customers').doc(this.props.match.params.id);\r\n    ref.get().then((doc) => {\r\n      if (doc.exists) {\r\n        const customer = doc.data();\r\n        this.setState({\r\n          key: doc.id,\r\n          firstName: customer.firstName,\r\n          lastName: customer.lastName,\r\n          job: customer.job\r\n        });\r\n      } else {\r\n        //console.log(\"erorrrrrrr hnaaa\");\r\n      }\r\n    });\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const state = this.state\r\n    state[e.target.name] = e.target.value;\r\n    this.setState({customer:state});\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault(); // mat3mlsh refresh\r\n\r\n    const { firstName, lastName, job } = this.state;\r\n\r\n    const updateRef = firebase.firestore().collection('customers').doc(this.state.key);\r\n    updateRef.set({\r\n      firstName,\r\n      lastName,\r\n      job\r\n    }).then((docRef) => {\r\n      this.setState({\r\n        key: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        job: ''\r\n      });\r\n      this.props.history.push(\"/show/\"+this.props.match.params.id)\r\n    })\r\n    .catch((error) => {\r\n      //console.error(\"Error hena \", error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"container\">\r\n        <div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">\r\n            <h3 class=\"panel-firstName\">\r\n              Update Data\r\n            </h3>\r\n          </div>\r\n          <div class=\"panel-body\">\r\n        \r\n            <form onSubmit={this.onSubmit}>\r\n              <div class=\"form-group\">\r\n                <label for=\"firstName\">First Name:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"firstName\" value={this.state.firstName} onChange={this.onChange} placeholder=\"First Name\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"lastName\">Last Name:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"lastName\" value={this.state.lastName} onChange={this.onChange} placeholder=\"Last Name\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"job\">Job:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"job\" value={this.state.job} onChange={this.onChange} placeholder=\"Job\" />\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-success\">Submit</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Edit;\r\n","import React, { Component } from 'react';\r\nimport firebase from '../config/db';\r\n\r\nclass Create extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.ref = firebase.firestore().collection('customers');\r\n    this.state = {\r\n      firstName: '',\r\n      lastName: '',\r\n      job: ''\r\n    };\r\n  }\r\n  onChange = (e) => {\r\n    const state = this.state\r\n    state[e.target.name] = e.target.value;\r\n    this.setState(state);\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { firstName, lastName, job } = this.state;\r\n\r\n    this.ref.add({\r\n      firstName,\r\n      lastName,\r\n      job\r\n    }).then((docRef) => {\r\n      this.setState({\r\n        firstName: '',\r\n        lastName: '',\r\n        job: ''\r\n      });\r\n      this.props.history.push(\"/\")\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error adding document: \", error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { firstName, lastName, job } = this.state;\r\n    return (\r\n      <div class=\"container\">\r\n        <div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">\r\n            <h3 class=\"panel-title\">\r\n              Create Customer\r\n            </h3>\r\n          </div>\r\n          <div class=\"panel-body\">\r\n         \r\n            <form onSubmit={this.onSubmit}>\r\n              <div class=\"form-group\">\r\n                <label for=\"firstName\">First Name:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"firstName\" value={firstName} onChange={this.onChange} placeholder=\"First Name\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"lastName\">Last Name:</label>\r\n                <input class=\"form-control\" name=\"lastName\" value={lastName} onChange={this.onChange} placeholder=\"Last Name\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"job\">Job:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"job\" value={job} onChange={this.onChange} placeholder=\"Job\" />\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-success\">Submit</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Create;","import React, { Component } from 'react';\r\nimport firebase from '../config/db';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Show extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customer: {},\r\n      key: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const ref = firebase.firestore().collection('customers').doc(this.props.match.params.id);\r\n    ref.get().then((doc) => {\r\n      if (doc.exists) {\r\n        this.setState({\r\n          customer: doc.data(),\r\n          key: doc.id,\r\n          isLoading: false\r\n        });\r\n      } else {\r\n        //console.log(\"fe error ..\");\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(id){\r\n    firebase.firestore().collection('customers').doc(id).delete().then(() => {\r\n      console.log(\"Document successfully deleted!\");\r\n      this.props.history.push(\"/\")\r\n    }).catch((error) => {\r\n      \r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"container\">\r\n        <div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">\r\n          \r\n            <h3 class=\"panel-firstName\">\r\n              {this.state.customer.firstName}\r\n            </h3>\r\n          </div>\r\n          <div class=\"panel-body\">\r\n            <dl>\r\n              <dt>Last Name:</dt>\r\n              <dd>{this.state.customer.lastName}</dd>\r\n              <dt>Job:</dt>\r\n              <dd>{this.state.customer.job}</dd>\r\n            </dl>\r\n            <Link to={`/Edit/${this.state.key}`} class=\"btn btn-success\">Update</Link>&nbsp;\r\n            <button onClick={this.delete.bind(this, this.state.key)} class=\"btn btn-danger\">Delete</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Show;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'; \nimport Edit from './components/Edit';\nimport Create from './components/Create';\nimport Show from './components/Show';\n\nReactDOM.render(\n  <Router>\n      <div>\n        <Route exact path='/' component={App} />\n        <Route path='/edit/:id' component={Edit} />\n        <Route path='/create' component={Create} />\n        <Route path='/show/:id' component={Show} />\n      </div>\n  </Router>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();"],"sourceRoot":""}